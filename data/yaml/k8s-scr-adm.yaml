#############################################################################################################################################
# This YAML loads container k8s-scr-adm into Kubernetes
#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# - ensure setting for image is correct and pointing to the correct container image.
#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# - run file on server where this yaml is stored: kubectl apply -f k8s-scr-adm.yaml
#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Call container: https://<Server>/k8s-scr-adm/<endpoint> 
#############################################################################################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-scr-adm
  namespace: default
  labels:
    app-owner: viyademo01
    app.kubernetes.io/name: k8s-scr-adm
spec:
  replicas: 1
  selector:
    matchLabels:
      app-owner: viyademo01
      app.kubernetes.io/name: k8s-scr-adm
  template:
    metadata:
      labels:
        app-owner: viyademo01
        app.kubernetes.io/name: k8s-scr-adm
    spec:
      containers:
      - name: k8s-scr-adm
        image: ghcr.io/sukckn/k8s-scr-adm:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 5000
          protocol: TCP
        volumeMounts:
          - name: kubectl
            mountPath: /tmp/config
            subPath: config
          - name: yaml-template
            mountPath: /k8s-scr-adm/template/scr-template.yaml
            subPath: template
          - name: k8s-scr-adm-config
            mountPath: /k8s-scr-adm/app/config.py
            subPath: config
        securityContext:
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsUser: 1001
          runAsNonRoot: true
          allowPrivilegeEscalation: false
      restartPolicy: Always
      securityContext: {}
      volumes:
        - name: kubectl
          configMap:
            name: kubectl-config
        - name: yaml-template
          configMap:
            name: scr-yaml-template
        - name: k8s-scr-adm-config
          configMap:
            name: k8s-scr-adm-config
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-scr-adm
  namespace: default
  labels:
    app-owner: viyademo01
    app.kubernetes.io/name: k8s-scr-adm
spec:
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 5000
  selector:
    app-owner: viyademo01
    app.kubernetes.io/name: k8s-scr-adm
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: k8s-scr-adm
  namespace: default
  labels:
    app-owner: viyademo01
    app.kubernetes.io/name: k8s-scr-adm
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - ck05-sukckn.net.sas.com
    secretName: net-sas-com-app-certs
  rules:
  - host: ck05-sukckn.net.sas.com
    http:
      paths:
      - path: /k8s-scr-adm
        pathType: Prefix
        backend:
          service:
            name: k8s-scr-adm
            port:
              number: 80